{% extends layoutTemplate %}

{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/file-upload/macro.njk" import govukFileUpload %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}

{% import "custom-components/representation-information/index.njk" as representationInformation %}

{% block before_content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            {% if errorSummary %}
                {{ govukErrorSummary({
                    titleText: "There is a problem",
                    errorList: errorSummary,
                    attributes: {"data-cy": "error-wrapper"}
                }) }}
            {% endif %}
        </div>
    </div>
{% endblock before_content %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <input type="hidden" name="_csrf" value="{{ _csrf }}">
            <h1 class="govuk-heading-l">
                {{ question.question }}
            </h1>
            <p class="govuk-body">You should not use racist, inflammatory or abusive language, or include personal information (also called special category information) about yourself or others in your comments. Any attachments will be reviewed and redacted if necessary.</p>
            <p class="govuk-body">
                You can upload the following file types:
                <br>
                PDF, PNG, JPG, JPEG, TIF, TIFF, DOC, DOCX, XLS, XLSX
            </p>
            <ul class="govuk-list govuk-list--bullet">
                <li>Files must not be compressed (e.g. no ZIP files)</li>
                <li>Each file must be under 20MB</li>
                <li>Total upload size must be under 1GB</li>
            </ul>

            {{ representationInformation.renderRepresentationInformation("Examples of personal information") }}

            <p class="govuk-body govuk-!-font-weight-bold">Upload attachments</p>

            {% if uploadedFiles and uploadedFiles | length > 0 %}{# update this variable to use correct value #}
                <dl class="govuk-summary-list">
                    {% for file in uploadedFiles %}
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__value">
                                {{ file.name }}
                            </dt>
                            <dd class="govuk-summary-list__actions">
                                <form id="deleteForm{{ loop.index }}" action="{{ currentUrl }}/delete-document/{{ file.id }}" method="POST">
                                    <input type="hidden" name="_csrf" value="{{ _csrf }}">
                                </form>
                                <a href="#" role="button" class="js-remove-link govuk-link" data-form-id="deleteForm{{ loop.index }}">Remove</a>
                            </dd>
                        </div>
                    {% endfor %}
                </dl>
            {% endif %}

            <form id="upload-form" method="post" enctype="multipart/form-data" action="{{ currentUrl }}/upload-documents">
                <input type="hidden" name="_csrf" value="{{ _csrf }}">
                {{ govukFileUpload({
                    id: question.fieldName,
                    name: "files[]",
                    label: {
                        text: "Upload attachments",
                        classes: "govuk-visually-hidden"
                    },
                    javascript: true,
                    chooseFilesButtonText: "Select attachments",
                    dropInstructionText: "or drag and drop attachments here",
                    attributes: {
                        multiple: true,
                        accept: "application/pdf,image/png,image/jpeg,image/tiff,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                    }
                }) }}
            </form>

            <form action="" method="post" novalidate>
                <input type="hidden" name="_csrf" value="{{ _csrf }}">
                <input type="hidden" name="{{ question.fieldName }}" value='{{ uploadedFilesJson | safe }}'>
                {{ govukButton({
                    text: continueButtonText,
                    type: "submit",
                    attributes: { "data-cy":"button-save-and-continue"}
                }) }}
            </form>

            <script {% if cspNonce %}nonce={{ cspNonce }}{% endif %}>
                document.addEventListener('DOMContentLoaded', function () {
                    document.querySelectorAll('.js-remove-link').forEach(function (link) {
                        link.addEventListener('click', function (event) {
                            event.preventDefault();
                            const formId = link.getAttribute('data-form-id');
                            const form = document.getElementById(formId);
                            if (form) form.submit();
                        });
                    });
                });

                document.addEventListener('DOMContentLoaded', function () {
                    const fileInput = document.querySelector('#{{ question.fieldName }}-input');
                    const form = document.querySelector('#upload-form');

                    const allowedTypes = ['application/pdf','image/png','image/jpeg','image/tiff','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document','application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];
                    const maxFileSizeMB = 20;
                    const maxFiles = 3;

                    function showError(message) {
                        let errorDiv = document.querySelector('#file-upload-error');
                        if (!errorDiv) {
                            errorDiv = document.createElement('div');
                            errorDiv.id = 'file-upload-error';
                            errorDiv.className = 'govuk-error-message';
                            fileInput.closest('.govuk-form-group').appendChild(errorDiv);
                        }
                        errorDiv.textContent = message;
                    }

                    function clearError() {
                        const errorDiv = document.querySelector('#file-upload-error');
                        if (errorDiv) errorDiv.remove();
                    }

                    if (fileInput && form) {
                        fileInput.addEventListener('change', function () {
                            clearError();

                            const files = fileInput.files;
                            if (files.length === 0) return;

                            if (files.length > maxFiles) {
                                showError(`You can only upload up to ${maxFiles} files.`);
                                fileInput.value = '';
                                return;
                            }

                            for (const file of files) {
                                if (!allowedTypes.includes(file.type)) {
                                    showError(`The attachment must be PDF, PNG, DOC, DOCX, JPG, JPEG, TIF, TIFF, XLS or XSLX`);
                                    fileInput.value = '';
                                    return;
                                }

                                const sizeMB = file.size / (1024 * 1024);
                                if (sizeMB > maxFileSizeMB) {
                                    showError(`Each file must be smaller than ${maxFileSizeMB}MB.`);
                                    fileInput.value = '';
                                    return;
                                }
                            }
                            form.submit();
                        });
                    }
                });
            </script>
        </div>
    </div>
{% endblock %}